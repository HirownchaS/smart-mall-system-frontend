import {
  Animation2 as Animation,
  AnimationSettings,
  ButtonProps,
  ComplexBase,
  ComponentBase,
  Dialog,
  DialogUtility,
  Popup,
  PositionData,
  Spinner,
  Tooltip,
  applyMixins,
  calculatePosition,
  calculateRelativeBasedPosition,
  createSpinner,
  fit,
  flip,
  getMaxZindex,
  getScrollableParent,
  getZindexPartial,
  hideSpinner,
  isCollide,
  setSpinner,
  showSpinner
} from "./chunk-OU67XKZ6.js";
import "./chunk-6VWAHX6D.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// ../admin/node_modules/@syncfusion/ej2-react-popups/src/dialog/buttons-directive.js
var __extends = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (b2.hasOwnProperty(p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DialogButtonDirective = (
  /** @class */
  function(_super) {
    __extends(DialogButtonDirective2, _super);
    function DialogButtonDirective2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    DialogButtonDirective2.moduleName = "dialogButton";
    return DialogButtonDirective2;
  }(ComplexBase)
);
var ButtonsDirective = (
  /** @class */
  function(_super) {
    __extends(ButtonsDirective2, _super);
    function ButtonsDirective2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonsDirective2.propertyName = "buttons";
    ButtonsDirective2.moduleName = "buttons";
    return ButtonsDirective2;
  }(ComplexBase)
);

// ../admin/node_modules/@syncfusion/ej2-react-popups/src/dialog/dialog.component.js
var React = __toESM(require_react());
var __extends2 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (b2.hasOwnProperty(p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DialogComponent = (
  /** @class */
  function(_super) {
    __extends2(DialogComponent2, _super);
    function DialogComponent2(props) {
      var _this = _super.call(this, props) || this;
      _this.initRenderCalled = false;
      _this.checkInjectedModules = false;
      _this.directivekeys = { "buttons": "dialogButton" };
      _this.immediateRender = false;
      _this.portals = [];
      return _this;
    }
    DialogComponent2.prototype.render = function() {
      if ((this.element && !this.initRenderCalled || this.refreshing) && !this.isReactForeceUpdate) {
        _super.prototype.render.call(this);
        this.initRenderCalled = true;
      } else {
        return React.createElement("div", this.getDefaultAttributes(), [].concat(this.props.children, this.portals));
      }
    };
    return DialogComponent2;
  }(Dialog)
);
applyMixins(DialogComponent, [ComponentBase, React.Component]);

// ../admin/node_modules/@syncfusion/ej2-react-popups/src/tooltip/tooltip.component.js
var React2 = __toESM(require_react());
var __extends3 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (b2.hasOwnProperty(p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TooltipComponent = (
  /** @class */
  function(_super) {
    __extends3(TooltipComponent2, _super);
    function TooltipComponent2(props) {
      var _this = _super.call(this, props) || this;
      _this.initRenderCalled = false;
      _this.checkInjectedModules = false;
      _this.immediateRender = false;
      _this.portals = [];
      return _this;
    }
    TooltipComponent2.prototype.render = function() {
      if ((this.element && !this.initRenderCalled || this.refreshing) && !this.isReactForeceUpdate) {
        _super.prototype.render.call(this);
        this.initRenderCalled = true;
      } else {
        return React2.createElement("div", this.getDefaultAttributes(), [].concat(this.props.children, this.portals));
      }
    };
    return TooltipComponent2;
  }(Tooltip)
);
applyMixins(TooltipComponent, [ComponentBase, React2.Component]);
export {
  Animation,
  AnimationSettings,
  ButtonProps,
  ButtonsDirective,
  Dialog,
  DialogButtonDirective,
  DialogComponent,
  DialogUtility,
  Popup,
  PositionData,
  Spinner,
  Tooltip,
  TooltipComponent,
  calculatePosition,
  calculateRelativeBasedPosition,
  createSpinner,
  fit,
  flip,
  getMaxZindex,
  getScrollableParent,
  getZindexPartial,
  hideSpinner,
  isCollide,
  setSpinner,
  showSpinner
};
//# sourceMappingURL=@syncfusion_ej2-react-popups.js.map
